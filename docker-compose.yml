version: '3.4'

services:
  OrderApi:
    image: ${DOCKER_REGISTRY-}order-api
    build:
      context: .
      dockerfile: src/Services/Order/Api/Dockerfile
    container_name: order-api
    depends_on:
      - OrderDb

  # InventoryApi:
  #   image: ${DOCKER_REGISTRY-}inventory-api
  #   build:
  #     context: .
  #     dockerfile: src/Services/Inventory/Api/Dockerfile
  #   container_name: inventory-api
  #   depends_on:
  #     - InventoryDb

  # PaymentApi:
  #   image: ${DOCKER_REGISTRY-}payment-api
  #   build:
  #     context: .
  #     dockerfile: src/Services/Payment/Api/Dockerfile
  #   container_name: payment-api
  #   depends_on:
  #     - PaymentDb

  # UserApi:
  #   image: ${DOCKER_REGISTRY-}user-api
  #   build:
  #     context: .
  #     dockerfile: src/Services/User/Api/Dockerfile
  #   container_name: user-api
  #   depends_on:
  #     - UserDb
  #     - RabbitMqBroker

  # RabbitMqBroker:
  #   image: rabbitmq:3-management-alpine
  #   container_name: 'rabbitmq'

  OrderDb:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: order-db
    # restart: always
    command: /bin/bash /scripts/docker-entrypoint.sh
    volumes:
     - ./src/Services/Order/CreateDatabase:/scripts/

  # InventoryDb:
  #   image: postgres
  #   container_name: inventory-db

  # PaymentDb:
  #   image: postgres
  #   container_name: payment-db

  # UserDb:
  #   image: mcr.microsoft.com/mssql/server:2022-latest
  #   container_name: user-db
  #   # restart: always
  #   command: /bin/bash /scripts/docker-entrypoint.sh
  #   volumes:
  #    - ./src/Services/User/CreateDatabase:/scripts/
  